{"version":3,"sources":["components/Note.js","services/notes.js","App2.js","index.js"],"names":["Note","note","toggleImportance","label","important","onClick","content","baseUrl","exp","getAll","axios","get","then","res","data","create","nowObject","post","update","id","newObject","put","App2","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","setImportant","useEffect","noteService","initialNotes","notesToShow","filter","map","find","changeNote","className","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","concat","catch","err","console","log","value","onChange","target","type","checked","ReactDOM","render","document","getElementById"],"mappings":"8LAceA,EAZF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACXC,EAAQF,EAAKG,UACb,qBACA,iBACN,OACI,+BACA,wBAAQC,QAASH,EAAjB,SAAoCC,IACnCF,EAAKK,Y,gBCRRC,EAAU,kCAwBDC,EAFH,CAAEC,OApBC,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAkBbC,OAfP,SAACC,GAEZ,OADgBN,IAAMO,KAAKV,EAAQS,GAEvBJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAYFI,OAPf,SAACC,EAAIC,GAEhB,OADgBV,IAAMW,IAAN,UAAad,EAAb,YAAwBY,GAAKC,GAEjCR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UCmFjBQ,EAhGF,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACRC,EADQ,KACDC,EADC,OAEcF,mBAAS,kBAFvB,mBAERG,EAFQ,KAEAC,EAFA,OAGeJ,oBAAS,GAHxB,mBAGRK,EAHQ,KAGCC,EAHD,OAImBN,oBAAS,GAJ5B,mBAIRnB,EAJQ,KAIG0B,EAJH,KAMfC,qBAAU,WACNC,EACKvB,SACAG,MAAK,SAAAqB,GAAY,OAAIR,EAASQ,QACrC,IAEF,IAiCMC,EAAcN,EAClBJ,EACAA,EAAMW,QAAO,SAAAlC,GAAI,OAAuB,IAAnBA,EAAKG,aAa5B,OACI,gCAEI,uCACA,6BACK8B,EAAYE,KAAI,SAAAnC,GAAI,OAChB,cAAC,EAAD,CAEGA,KAAMA,EACNC,kBApBMiB,EAoB6BlB,EAAKkB,GApB5B,WAC5B,IAAMlB,EAAOuB,EAAMa,MAAK,SAAApC,GAAI,OAAIA,EAAKkB,KAAOA,KACtCmB,EAAU,2BAAOrC,GAAP,IAAaG,WAAYH,EAAKG,YAE9C4B,EACKd,OAAOC,EAAGmB,GACV1B,MAAK,SAAAC,GACFY,EAASD,EAAMY,KAAI,SAAAnC,GAAI,OAAIA,EAAKkB,KAAOA,EAAKlB,EAAOY,YAWtCZ,EAAKkB,IAlBL,IAACA,OAwBlB,uBAAMoB,UAAU,OAAOC,SA7Df,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACfrC,QAASoB,EACTtB,UAAWA,EACXwC,MAAM,IAAIC,MAAOC,eAGrBd,EACKjB,OAAO4B,GACP/B,MAAK,SAAAc,GACFD,EAASD,EAAMuB,OAAOrB,IACtBC,EAAW,IACXG,GAAa,MAGhBkB,OAAM,SAAAC,GAAG,OAAGC,QAAQC,IAAI,UAAUF,OA6CnC,UACI,uBAAOG,MAAO1B,EACV2B,SA3CS,SAACZ,GACtBd,EAAWc,EAAMa,OAAOF,UA4ChB,wBAAQG,KAAK,SAAb,kBACA,oDAEI,uBAAOA,KAAK,WAAWC,QAAS5B,EAASyB,SA3C/B,SAACZ,GACvBZ,EAAWY,EAAMa,OAAOE,YAwChB,cAII,uBAAOD,KAAK,WAAWC,QAASpD,EAAWiD,SAzC3B,SAACZ,GAC7BX,EAAaW,EAAMa,OAAOE,sBCvClCC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.6f45bc42.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n    const label = note.important \r\n        ? 'make not important'\r\n        : 'make important'\r\n    return (\r\n        <li>\r\n        <button onClick={toggleImportance}>{label}</button>\r\n        {note.content}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst create = (nowObject) => {\r\n    const request = axios.post(baseUrl,nowObject)\r\n    return (\r\n        request.then(res => res.data)\r\n    )\r\n    \r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`,newObject)\r\n    return (\r\n        request.then(res => res.data)\r\n    )\r\n    \r\n}\r\nconst exp = { getAll, create, update }\r\n\r\nexport default exp","import React, { useState, useEffect} from 'react';\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\n\r\n\r\n\r\nconst App2 = () => {\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote,setNewNote] = useState('a new note ...')\r\n    const [showAll, setShowAll] = useState(true)\r\n    const [important, setImportant] = useState(false)\r\n\r\n    useEffect(()=> {\r\n        noteService\r\n            .getAll()            \r\n            .then(initialNotes => setNotes(initialNotes))\r\n    },[])\r\n\r\n    const addNote = (event) => {\r\n        event.preventDefault()\r\n        const noteObject = {\r\n            content: newNote,\r\n            important: important,\r\n            date: new Date().toISOString()\r\n        }\r\n        \r\n        noteService\r\n            .create(noteObject)\r\n            .then(newNote => {\r\n                setNotes(notes.concat(newNote))\r\n                setNewNote('')\r\n                setImportant(false)\r\n        \r\n            })\r\n            .catch(err=> console.log('error->',err))\r\n\r\n    }\r\n\r\n    const handleNoteChange = (event) => {\r\n        setNewNote(event.target.value)\r\n\r\n    }\r\n\r\n    const handleCheckBoxAll = (event) => {\r\n        setShowAll(event.target.checked)\r\n    }\r\n\r\n    const handleCheckBoxImportant = (event) => {\r\n        setImportant(event.target.checked)\r\n    }\r\n\r\n    const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important === true)\r\n\r\n    const toggleImportance = (id)=> () => {\r\n        const note = notes.find(note => note.id === id)\r\n        const changeNote = {...note, important: !note.important}\r\n\r\n        noteService\r\n            .update(id,changeNote)\r\n            .then(res => {\r\n                setNotes(notes.map(note => note.id !== id ? note : res ))\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <h1>Notas</h1>\r\n            <ul>\r\n                {notesToShow.map(note =>\r\n                     <Note \r\n                        key={note.id} \r\n                        note={note}\r\n                        toggleImportance={toggleImportance(note.id)}\r\n                    />\r\n                )}\r\n            </ul>\r\n            <form className='form' onSubmit={addNote}>\r\n                <input value={newNote}\r\n                    onChange={handleNoteChange}\r\n                />\r\n                <button type='submit'>save</button>\r\n                <section>\r\n                    mostrar todo?\r\n                    <input type='checkbox' checked={showAll} onChange={handleCheckBoxAll}/>\r\n                    Importante?\r\n                    <input type='checkbox' checked={important} onChange={handleCheckBoxImportant}/>\r\n                </section>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default App2\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App1 from './components/App1';\nimport App2 from './App2';\n\n\n\n\nReactDOM.render(<App2 />, document.getElementById('root'))"],"sourceRoot":""}